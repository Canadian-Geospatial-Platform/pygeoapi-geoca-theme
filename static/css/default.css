@media (min-width: 1400px) {
  .container{
    width: 1320px;
  }
}

.announcement-banner {
  background-color: midnightblue;
  color: white;
  position: relative;
  margin-top: 0px;
  padding: 12px 0;
  display: flex;
}

.announcement-banner-container {
  display: flex;
}

.announcement-text {
  align-self: center;
}

.announcement-close-button {
  background-color: midnightblue;
  border: none;
  margin-left: auto;
  font-size: 36px;
  padding: 0 16px;
}

.sortable {
  cursor: pointer;
}

.text-break {
  word-break: break-all;
}
.inline-block {
  display: inline-block;
}
.padding-tb-3 {
  padding-top: 3px;
  padding-bottom: 3px;
}
.padding-tb-5 {
  padding-top: 5px;
  padding-bottom: 5px;
}
.fixed-table-layout {
  table-layout: fixed;
}
.keyword-search-input {
  width: 150px;
}

.ellipsis {
  text-overflow: ellipsis;

  /* Required for text-overflow to do anything */
  white-space: nowrap;
  overflow: hidden;
}
.items-table-filter-container {
  padding-bottom: 8px;
}
#items-table-container th {
  background: white;
  position: sticky;
  top: 0; /* sticky table header */
}
.items-td-div {
  min-width: 125px;
  max-width: 300px;
  display: -webkit-box;
  -webkit-line-clamp: 5;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
}

.item-td {
  overflow-wrap: anywhere;
}
.item-td-property-name {
  width: 35%;
}
.item-td-property-details {
  width: 65%;
}

#items-map, #collection-map {
  width: 100%;
  height: 400px;
}
#items-table-container {
  height: 400px;
  overflow: scroll;
}

@media (min-width: 768px) {
  .advanced-search-list {
    column-count: 2;
  }
}
@media (min-width: 992px) {
  .advanced-search-list {
    column-count: 3;
  }
}

.advanced-search-list .checkbox:first-of-type,
.advanced-search-list .radio:first-of-type {
  margin-top: 0px
}

footer.sticky {
  position: fixed;
  width: 100%;
}

table:not(.horizontal) {
  max-height: none;
}

#items-table .gc-chckbxrdio.checkbox input[type=checkbox]+label::before {
  top: 0;
}

#items-table .gc-chckbxrdio.checkbox input[type=checkbox]:checked+label::after {
  top: 1px;
}

#items-table .gc-chckbxrdio.checkbox input[type=checkbox]+label {
  line-height: revert;
  font-weight: revert;
  font-size: 20px;
  margin-left: 20px;
  white-space: nowrap;
}

.checkbox.showhideall {
  margin-top: 0;
  margin-bottom: 0;
}

#items-table-container th {
  z-index: 100;
}

.label-job {
  color: #000;
}

.job-successful {
  background: #d8eeca;
  border-color: #278400;
}

.job-accepted {
  background: #d7faff;
  border-color: #269abc;
}

.job-failed {
  background: #f3e9e8;
  border-color: #d3080c
}

.job-running {
  background: #f9f4d4;
  border-color: #f90;
}

/*
We set the element we are applying our loading mask to relative  
*/
.loading-mask {
  position: relative;
}

/*
Because we set .loading-mask relative, we can span our ::before  
element over the whole parent element  
*/
.loading-mask::before {
  content: '';
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background-color: rgba(0, 0, 0, 0.25);
}

/*
Spin animation for .loading-mask::after  
*/
@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(359deg);
  }
}

/*
The loading throbber is a single spinning element with three  
visible borders and a border-radius of 50%.  
Instead of a border we could also use a font-icon or any  
image using the content attribute.  
*/
.loading-mask::after {
  content: "";
  position: absolute;
  border-width: 3px;
  border-style: solid;
  border-color: transparent rgb(255, 255, 255) rgb(255, 255, 255);
  border-radius: 50%;
  width: 24px;
  height: 24px;
  top: calc(50% - 12px);
  left: calc(50% - 12px);
  animation: 2s linear 0s normal none infinite running spin;
  filter: drop-shadow(0 0 2 rgba(0, 0, 0, 0.33));
}
